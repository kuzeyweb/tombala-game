import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { v4 as uuid } from "uuid";
import { useEffect, useState } from "react";

export default function Home() {
  const [numbers, setNumbers] = useState([]);
  const [closedNumbers, setClosedNumbers] = useState({
    firstRow: 0,
    secondRow: 0,
    thirdRow: 0,
    numbers: [],
  });
  const [sack, setSack] = useState(
    Array.from({ length: 90 }, (_, index) => index + 1)
  );

  const drawNumber = () => {
    if (sack.length > 0) {
      const randomIndex = Math.floor(Math.random() * sack.length);
      const drawnNumber = sack[randomIndex];

      const updateClosedNumbers = (index, row) => {
        setClosedNumbers((current) => ({
          ...current,
          [row]: current[row] + 1,
          numbers: [...current.numbers, drawnNumber],
        }));
      };

      setSack((prevSack) => {
        const updatedSack = prevSack.filter(
          (_, index) => index !== randomIndex
        );
        if (numbers.includes(drawnNumber)) {
          const index = numbers.indexOf(drawnNumber);
          if (index < 9) updateClosedNumbers(index, "firstRow");
          if (index > 8 && index < 18) updateClosedNumbers(index, "secondRow");
          if (index > 17) updateClosedNumbers(index, "thirdRow");
        }
        return updatedSack;
      });
      console.log("drawn number: ", drawnNumber);
      return drawnNumber;
    } else {
      console.log("No numbers left in the array.");
      return null;
    }
  };

  const createCard = () => {
    const numbers = new Set();

    const numbersArray = Array.from({ length: 27 }, (_, index) => {
      if ((index + 1) % 2 === 0 || index === 8 || index === 26) {
        let number;
        do {
          number = Math.floor(Math.random() * 89) + 1;
        } while (numbers.has(number));

        numbers.add(number);
        return number;
      } else {
        return 0;
      }
    });
    setNumbers(numbersArray);
  };

  useEffect(() => {
    createCard();
  }, []);

  useEffect(() => {
    if (closedNumbers.numbers.length === 15)
      console.log(`TOMBALA! Remaining in the sack : ${sack.length}`);
    else {
      if (closedNumbers.firstRow === 5) console.log("First row completed");
      if (closedNumbers.secondRow === 5) console.log("Second row completed");
      if (closedNumbers.thirdRow === 5) console.log("Third row completed");
    }
  }, [closedNumbers]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.gameCanvas}>
        <div className={styles.card}>
          {numbers.map((item, index) => {
            if (item !== 0) {
              return (
                <div key={uuid()} className={styles.square}>
                  <span
                    style={
                      closedNumbers.numbers.includes(numbers[index])
                        ? { textDecoration: "line-through" }
                        : {}
                    }
                  >
                    {numbers[index]}
                  </span>
                </div>
              );
            } else return <div key={uuid()} className={styles.square}></div>;
          })}
          <button onClick={() => drawNumber()}>Draw a Number</button>
        </div>
      </div>
    </>
  );
}
